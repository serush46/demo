name: Java CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_run:
    workflows: ["Common Workflow"]
    types:
        - completed

env:
  IMAGE_NAME: "arunmrp90/demo-app"
  KIND_CLUSTER_NAME: demo
  SONAR_HOST_URL: http://65.2.175.244:9000
  SONAR_PASS: "eac7b35e1de2878a520112a86b8267898b497014"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.build_and_push_docker.outputs.docker_tag }}  # Passing the docker_tag to the next job
      docker_image_tag: "v1.0.${{ github.run_number }}" 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Run Unit Tests with JUnit
        run: mvn -B test --file pom.xml

      - name: Publish JUnit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results
          path: target/surefire-reports/

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=myapp
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=admin
            -Dsonar.password=admin123
            -Dsonar.java.binaries=target

      - name: Build Docker Image
        id: build_and_push_docker
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          docker build -t $IMAGE_NAME:$VERSION .

      - name: Build and Push Docker Images
        env:
          DOCKERHUB_USERNAME: arunmrp90
          DOCKERHUB_PASSWORD: "arunmrP@90"
        run: |
          # Extract short SHA and build number
          SHORT_SHA=$(echo "${GITHUB_SHA}" | head -c 7)
          BUILD_NUMBER="${{ github.run_number }}"

          # Docker tags
          IMAGE_NAME="arunmrp90/demo-app"
          TAG_SHA_BUILD="${IMAGE_NAME}:${SHORT_SHA}-${BUILD_NUMBER}"
          TAG_BUILD="${IMAGE_NAME}:${BUILD_NUMBER}"
          TAG_LATEST="${IMAGE_NAME}:latest"

          # Build Docker image
          docker build -t "$TAG_SHA_BUILD" -t "$TAG_BUILD" -t "$TAG_LATEST" SampleApp/

          # Push images to DockerHub
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push "$TAG_SHA_BUILD"
          docker push "$TAG_BUILD"
          docker push "$TAG_LATEST"

      - name: Trivy Scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy image -f json -o trivy.json arunmrp90/demo-app:latest

      - name: Generate Trivy HTML Report
        run: |
          python3 scripts/trivy_to_html.py
        env:
          TRIVY_JSON: trivy.json
          REPORT_HTML: trivy_report.html

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy_report.html
